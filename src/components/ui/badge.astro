---
import { cva, type VariantProps } from "class-variance-authority";
import type { HTMLAttributes } from 'astro/types';
import { cn } from "@/lib/utils";

export const badgeVariants = cva(
  "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
  {
    variants: {
      variant: {
        default:
          "border-transparent bg-primary text-primary-foreground hover:bg-gradient-to-r hover:from-primary hover:to-primary/80 hover:scale-105 hover:shadow-md",
        secondary:
          "border-transparent bg-secondary text-secondary-foreground hover:bg-gradient-to-r hover:from-secondary hover:to-secondary/80 hover:scale-105 hover:shadow-md",
        destructive:
          "border-transparent bg-destructive text-destructive-foreground hover:bg-gradient-to-r hover:from-destructive hover:to-destructive/80 hover:scale-105 hover:shadow-md",
        outline: "text-foreground border-input bg-background hover:bg-gradient-to-r hover:from-background hover:to-accent/30 hover:border-accent hover:scale-105",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
);

export interface Props extends HTMLAttributes<'div'>, VariantProps<typeof badgeVariants> {}

const { class: className, variant, ...htmlProps } = Astro.props;
---

<div class={cn(badgeVariants({ variant }), className)} {...htmlProps}>
  <slot />
</div>