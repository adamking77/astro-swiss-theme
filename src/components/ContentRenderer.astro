---
import ContentSplit from './layouts/ContentSplit.astro';
import MinimalList from './layouts/MinimalList.astro';
import Timeline from './layouts/Timeline.astro';
import DataStory from './layouts/DataStory.astro';
import HybridShowcase from './layouts/HybridShowcase.astro';
import TypographicHero from './layouts/TypographicHero.astro';
import BrandPlatform from './layouts/BrandPlatform.astro';
import CompanyMission from './layouts/CompanyMission.astro';
import FoundedStory from './layouts/FoundedStory.astro';
import BookHero from './layouts/BookHero.astro';

// Report components
import ExecutiveSummary from './reports/ExecutiveSummary.astro';
import DataVisualization from './reports/DataVisualization.astro';
import FinancialHighlights from './reports/FinancialHighlights.astro';
import ClientInsights from './reports/ClientInsights.astro';
import MarketAnalysis from './reports/MarketAnalysis.astro';
import IndustryTrends from './reports/IndustryTrends.astro';
import FutureOutlook from './reports/FutureOutlook.astro';
import PerformanceMetrics from './reports/PerformanceMetrics.astro';
import RegionalPerformance from './reports/RegionalPerformance.astro';
import TechnologyStack from './reports/TechnologyStack.astro';

export interface Props {
  components?: Array<{
    type: string;
    [key: string]: any;
  }>;
  sections?: Array<{
    type: 'markdown' | 'component';
    id?: string;
    layout?: 'prose' | 'wide' | 'full-width';
    component?: string;
    data?: Record<string, any>;
    [key: string]: any;
  }>;
}

const { components = [], sections = [] } = Astro.props;
---

{/* Legacy components support */}
{components && components.length > 0 && (
  <div class="content-components space-y-0">
    {components.map((component, index) => {
      const key = `legacy-${index}-${component.type}`;
      return (
        <div key={key}>
          {component.type === 'ContentSplit' && (
            <ContentSplit
              leftTitle={component.leftTitle}
              leftDescription={component.leftDescription}
              rightTitle={component.rightTitle}
              rightItems={component.rightItems}
              rightChart={component.rightChart}
              reversed={component.reversed}
            />
          )}
          
          {component.type === 'MinimalList' && (
            <MinimalList
              title={component.title}
              items={component.items}
              numbered={component.numbered}
            />
          )}
          
          {component.type === 'Timeline' && (
            <Timeline
              title={component.title}
              events={component.events}
            />
          )}
          
          {component.type === 'DataStory' && (
            <DataStory
              year={component.year}
              storyTitle={component.storyTitle}
              storyDescription={component.storyDescription}
              dataTitle={component.dataTitle}
              dataSubtitle={component.dataSubtitle}
              dataGrid={component.dataGrid}
            />
          )}
          
          {component.type === 'HybridShowcase' && (
            <HybridShowcase
              primaryText={component.primaryText}
              accentText={component.accentText}
              gridTitle={component.gridTitle}
              gridItems={component.gridItems}
            />
          )}
          
          {component.type === 'TypographicHero' && (
            <TypographicHero
              primaryText={component.primaryText}
              accentText={component.accentText}
              subtitle={component.subtitle}
              description={component.description}
            />
          )}
          
          {component.type === 'BrandPlatform' && (
            <BrandPlatform
              title={component.title}
              description={component.description}
              features={component.features}
            />
          )}
          
          {component.type === 'CompanyMission' && (
            <CompanyMission
              missionTitle={component.missionTitle}
              mission={component.mission}
              visionTitle={component.visionTitle}
              vision={component.vision}
              valuesTitle={component.valuesTitle}
              values={component.values}
            />
          )}
          
          {component.type === 'FoundedStory' && (
            <FoundedStory
              year={component.year}
              title={component.title}
              aboutTitle={component.aboutTitle}
              aboutDescription={component.aboutDescription}
              collectionsTitle={component.collectionsTitle}
              collections={component.collections}
            />
          )}
          
          {component.type === 'BookHero' && (
            <BookHero
              title={component.title}
              subtitle={component.subtitle}
              author={component.author}
              publication={component.publication}
              quote={component.quote}
              quoteAuthor={component.quoteAuthor}
              description={component.description}
              imageSrc={component.imageSrc}
              imageAlt={component.imageAlt}
              imageWidth={component.imageWidth}
              imageHeight={component.imageHeight}
            />
          )}
          
          {/* Report Components */}
          {component.type === 'ExecutiveSummary' && (
            <ExecutiveSummary data={component.data || component} />
          )}
          
          {component.type === 'DataVisualization' && (
            <DataVisualization data={component.data || component} />
          )}
          
          {component.type === 'FinancialHighlights' && (
            <FinancialHighlights data={component.data || component} />
          )}
          
          {component.type === 'ClientInsights' && (
            <ClientInsights data={component.data || component} />
          )}
          
          {component.type === 'MarketAnalysis' && (
            <MarketAnalysis data={component.data || component} />
          )}
          
          {component.type === 'IndustryTrends' && (
            <IndustryTrends data={component.data || component} />
          )}
          
          {component.type === 'FutureOutlook' && (
            <FutureOutlook data={component.data || component} />
          )}
          
          {component.type === 'PerformanceMetrics' && (
            <PerformanceMetrics data={component.data || component} />
          )}
          
          {component.type === 'RegionalPerformance' && (
            <RegionalPerformance data={component.data || component} />
          )}
          
          {component.type === 'TechnologyStack' && (
            <TechnologyStack data={component.data || component} />
          )}
        </div>
      );
    })}
  </div>
)}

{/* New sections-based rendering */}
{sections && sections.length > 0 && (
  <div class="content-sections">
    {sections.map((section, index) => {
      if (section.type === 'component') {
        const sectionKey = `section-${index}-${section.component}`;
        const componentData = section.data || section;
        
        return (
          <div key={sectionKey}>
            {section.component === 'ContentSplit' && (
              <ContentSplit {...componentData} />
            )}
            
            {section.component === 'MinimalList' && (
              <MinimalList {...componentData} />
            )}
            
            {section.component === 'Timeline' && (
              <Timeline {...componentData} />
            )}
            
            {section.component === 'DataStory' && (
              <DataStory {...componentData} />
            )}
            
            {section.component === 'HybridShowcase' && (
              <HybridShowcase {...componentData} />
            )}
            
            {section.component === 'TypographicHero' && (
              <TypographicHero {...componentData} />
            )}
            
            {section.component === 'BrandPlatform' && (
              <BrandPlatform {...componentData} />
            )}
            
            {section.component === 'CompanyMission' && (
              <CompanyMission {...componentData} />
            )}
            
            {section.component === 'FoundedStory' && (
              <FoundedStory {...componentData} />
            )}
            
            {section.component === 'BookHero' && (
              <BookHero {...componentData} />
            )}
            
            {/* Report Components */}
            {section.component === 'ExecutiveSummary' && (
              <ExecutiveSummary data={componentData} />
            )}
            
            {section.component === 'DataVisualization' && (
              <DataVisualization data={componentData} />
            )}
            
            {section.component === 'FinancialHighlights' && (
              <FinancialHighlights data={componentData} />
            )}
            
            {section.component === 'ClientInsights' && (
              <ClientInsights data={componentData} />
            )}
            
            {section.component === 'MarketAnalysis' && (
              <MarketAnalysis data={componentData} />
            )}
            
            {section.component === 'IndustryTrends' && (
              <IndustryTrends data={componentData} />
            )}
            
            {section.component === 'FutureOutlook' && (
              <FutureOutlook data={componentData} />
            )}
            
            {section.component === 'PerformanceMetrics' && (
              <PerformanceMetrics data={componentData} />
            )}
            
            {section.component === 'RegionalPerformance' && (
              <RegionalPerformance data={componentData} />
            )}
            
            {section.component === 'TechnologyStack' && (
              <TechnologyStack data={componentData} />
            )}
          </div>
        );
      }
      
      return null; // Markdown sections handled by parent template
    })}
  </div>
)}