---
// Import global styles
import '../styles/global.css';
import Navigation from '../components/Navigation.astro'; // New import
import Footer from '../components/sections/Footer.astro'; // Import Footer
import ScrollToTop from '../components/interactive/ScrollToTop.tsx'; // Adjusted path
import { Toaster } from '../components/ui/toaster.tsx'; // Adjusted path
import Analytics from '../components/Analytics.astro';

// Define props that can be passed to the layout
export interface Props {
	title?: string;
	description?: string;
	image?: string;
	canonical?: string;
	noindex?: boolean;
	type?: 'website' | 'article' | 'product';
}

const {
    title = 'Swiss Design Theme - Modern Astro Template',
    description = 'A modern, flexible Astro theme based on Swiss design principles for corporate sites, portfolios, and blogs.',
    image = '/og-default.jpg',
    canonical = Astro.url.pathname,
    noindex = false,
    type = 'website'
} = Astro.props;

// Construct full URL for canonical and OG tags
const canonicalURL = new URL(canonical, Astro.site || Astro.url.origin);
const imageURL = new URL(image, Astro.site || Astro.url.origin);
---
<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Basic Meta Tags -->
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <meta name="description" content={description} />
    
    <!-- SEO Meta Tags -->
    <link rel="canonical" href={canonicalURL.href} />
    {noindex && <meta name="robots" content="noindex, nofollow" />}
    <meta name="generator" content={Astro.generator} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={canonicalURL.href} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={imageURL.href} />
    <meta property="og:site_name" content="Swiss Design Theme" />
    <meta property="og:locale" content="en_US" />
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content={canonicalURL.href} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={imageURL.href} />
    
    <!-- Favicon and App Icons -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="manifest" href="/site.webmanifest" />
    
    <!-- Performance and Preload Hints -->
    <meta name="theme-color" content="#ffffff" media="(prefers-color-scheme: light)" />
    <meta name="theme-color" content="#1a1a1a" media="(prefers-color-scheme: dark)" />
    
    <!-- Optimized font loading - preconnect for faster connection -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    
    <!-- Async font loading for better performance -->
    <link 
      rel="stylesheet" 
      href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap" 
      media="print" 
      onload="this.media='all'" 
    />
    <noscript>
      <link 
        rel="stylesheet" 
        href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap" 
      />
    </noscript>
    
    <!-- Image preloads for critical above-the-fold images -->
    <link rel="preload" as="image" href={imageURL.href} />
    
    <!-- Analytics and SEO Tracking -->
    <Analytics 
      plausibleDomain="swiss-astro-theme.vercel.app"
    />
    
    <!-- Theme Detection Script - Inline for Performance -->
    <script is:inline>
      (function() {
        const storageKey = 'astro-ui-theme';
        const getThemePreference = () => {
          if (typeof localStorage !== 'undefined' && localStorage.getItem(storageKey)) {
            return localStorage.getItem(storageKey);
          }
          return 'system';
        };
        
        const isDark = () => {
          const themePreference = getThemePreference();
          if (themePreference === 'system') {
            return window.matchMedia('(prefers-color-scheme: dark)').matches;
          }
          return themePreference === 'dark';
        };
        
        const theme = isDark() ? 'dark' : 'light';
        document.documentElement.classList.remove('light', 'dark');
        document.documentElement.classList.add(theme);
        document.documentElement.setAttribute('data-theme', theme);
      })();
    </script>
</head>
<body class="min-h-screen bg-background font-sans antialiased">
  <Navigation />
  <main class="flex-1 pt-20 lg:pt-24">
    <slot />
  </main>
  <Toaster client:visible />
  <ScrollToTop client:visible />
  <Footer />
</body>
</html>